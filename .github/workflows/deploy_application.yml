name: Deploy app con CloudFormation

on:
  push:
    branches: [ develop ]

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4

      - name: Configurar credenciales AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::200093566387:role/github-deployer-role
      
      #- name: Comprimir codido lambda
      #  run: zip -r events_lambda.py.zip micro-servicios/agregar-evento
#
      #- name: donde queda el archivo
      #  run: pwd
#
      #- name: Subir templates a S3
      #  run: |
      #    aws s3 sync infraestructura/templates s3://lambda-code-200093566387-us-east-1-dev/infra_templates --delete
#
      #- name: Subir codigo lambda a S3
      #  run: |
      #    aws s3 cp events_lambda.py.zip s3://lambda-code-200093566387-us-east-1-dev/scripts_aplication/

      - name: Deploy root stack
        run: |
                aws cloudformation deploy \
                  --stack-name deploy_infra_proyect \
                  --template-file infraestructura/stacks/main.yml \
                  --parameter-overrides \
                    TemplatesBaseUrl="https://s3.amazonaws.com/lambda-code-200093566387-us-east-1-dev/infra_templates" \
                    Environment=dev \
                    Region=us-east-1 \
                    EventTableName=EventTable \
                    ApiKeyName=events-api-key \
                    ApiKeyValue="" \
                  --capabilities CAPABILITY_NAMED_IAM \
                  --no-fail-on-empty-changeset

