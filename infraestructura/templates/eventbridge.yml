AWSTemplateFormatVersion: '2010-09-09'
Description: >
  EventBridge Scheduler que invoca la Lambda de actualización a una hora programada.

Parameters:
  UpdateLambdaFunctionArn:
    Type: String
    Description: ARN de la Lambda destino (UpdateEventLambda) que será invocada por el Scheduler.

  ScheduleExpression:
    Type: String
    Default: ""
    Description: Expresion de para programar schedule fijos, como la lambda lo creara se deja vacion

  InputPayload:
    Type: String
    Description: Payload JSON que se enviará a la Lambda destino.
    Default: '{}'

Resources:

  EventBridgeInvokeLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "EventBridgeSchedulerInvokeLambdaRole-${AWS::StackName}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: scheduler.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: InvokeTargetLambda
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: lambda:InvokeFunction
                Resource: !Ref UpdateLambdaFunctionArn

  UpdateLambdaSchedule:
    Condition: HasScheduleExpression
    Type: AWS::Scheduler::Schedule
    Properties:
      Name: !Sub "update-lambda-schedule-${AWS::StackName}"
      ScheduleExpression: !Ref ScheduleExpression
      FlexibleTimeWindow:
        Mode: OFF
      Target:
        Arn: !Ref UpdateLambdaFunctionArn
        RoleArn: !GetAtt EventBridgeInvokeLambdaRole.Arn
        Input: !Ref InputPayload

Outputs:
  ScheduleName:
    Description: Nombre del schedule creado
    Value: !Ref UpdateLambdaSchedule

  SchedulerRoleArn:
    Description: ARN del role usado por EventBridge Scheduler
    Value: !GetAtt EventBridgeInvokeLambdaRole.Arn
