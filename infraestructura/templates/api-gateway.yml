AWSTemplateFormatVersion: '2010-09-09'
Description: REST API -> Lambda proxy (/event con POST, PUT, DELETE, GET) + API Key

Parameters:
  LambdaFunctionArn:
    Type: String

  ApiKeyName:
    Type: String
    Default: events-api-key
    Description: Nombre del API Key a crear

  ApiKeyValue:
    Type: String
    Default: ""
    NoEcho: true
    Description: "(Opcional) Valor fijo del API Key. Déjalo vacío para que AWS lo genere."

Conditions:
  HasApiKeyValue: !Not [!Equals [!Ref ApiKeyValue, ""]]

Resources:
  ApiGatewayRestApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: 'EventManagementAPI'
      Description: 'API Gateway para CRUD de Event Management y User Management Lambdas'

  # Recurso /event
  ApiGatewayResourceEvent:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      ParentId: !GetAtt ApiGatewayRestApi.RootResourceId
      PathPart: 'event'
      RestApiId: !Ref ApiGatewayRestApi

  # Métodos (requieren API Key)
  ApiGatewayMethodEventPost:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: 'NONE'
      ApiKeyRequired: true
      HttpMethod: 'POST'
      ResourceId: !Ref ApiGatewayResourceEvent
      RestApiId: !Ref ApiGatewayRestApi
      Integration:
        IntegrationHttpMethod: 'POST'
        Type: 'AWS_PROXY'
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunctionArn}/invocations'

  ApiGatewayMethodEventGet:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: 'NONE'
      ApiKeyRequired: true
      HttpMethod: 'GET'
      ResourceId: !Ref ApiGatewayResourceEvent
      RestApiId: !Ref ApiGatewayRestApi
      Integration:
        IntegrationHttpMethod: 'POST'
        Type: 'AWS_PROXY'
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunctionArn}/invocations'

  ApiGatewayMethodEventPut:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: 'NONE'
      ApiKeyRequired: true
      HttpMethod: 'PUT'
      ResourceId: !Ref ApiGatewayResourceEvent
      RestApiId: !Ref ApiGatewayRestApi
      Integration:
        IntegrationHttpMethod: 'POST'
        Type: 'AWS_PROXY'
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunctionArn}/invocations'

  ApiGatewayMethodEventDelete:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      AuthorizationType: 'NONE'
      ApiKeyRequired: true
      HttpMethod: 'DELETE'
      ResourceId: !Ref ApiGatewayResourceEvent
      RestApiId: !Ref ApiGatewayRestApi
      Integration:
        IntegrationHttpMethod: 'POST'
        Type: 'AWS_PROXY'
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunctionArn}/invocations'

  # Deployment + Stage prod (rápido)
  ApiGatewayDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn:
      - ApiGatewayMethodEventPost
      - ApiGatewayMethodEventPut
      - ApiGatewayMethodEventDelete
      - ApiGatewayMethodEventGet
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      StageName: 'prod'

  # API Key
  EventsApiKey:
    Type: 'AWS::ApiGateway::ApiKey'
    Properties:
      Name: !Ref ApiKeyName
      Enabled: true
      # Si pasas un valor, se usa; si no, lo genera AWS
      Value: !If [HasApiKeyValue, !Ref ApiKeyValue, !Ref 'AWS::NoValue']

  # Usage Plan y asociación
  EventsUsagePlan:
    Type: 'AWS::ApiGateway::UsagePlan'
    DependsOn:
      - ApiGatewayDeployment 
    Properties:
      UsagePlanName: 'events-usage-plan'
      ApiStages:
        - ApiId: !Ref ApiGatewayRestApi
          Stage: 'prod'

  EventsUsagePlanKey:
    Type: 'AWS::ApiGateway::UsagePlanKey'
    Properties:
      KeyId: !Ref EventsApiKey
      KeyType: 'API_KEY'
      UsagePlanId: !Ref EventsUsagePlan

  # Permitir invocación desde este API
  LambdaInvokePermissionEvent:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref LambdaFunctionArn
      Principal: 'apigateway.amazonaws.com'
      SourceArn: !Sub "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayRestApi}/*/*/*"

Outputs:
  ApiGatewayUrl:
    Description: "URL base"
    Value: !Sub "https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/prod"
  EventEndpoint:
    Description: "Endpoint /event (POST, PUT, DELETE, GET)"
    Value: !Sub "https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/prod/event"
  ApiKeyId:
    Description: "ID del API Key (usa este ID para leer el valor si no lo fijaste)"
    Value: !Ref EventsApiKey
